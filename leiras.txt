
composer create-project laravel/laravel vue-api-demo

cd vue-api-demo


Mysql beállítása
mysql -iroot -p

create database vuedemo
CREATE USER 'vuedemo'@'localhost' IDENTIFIED BY '.....';
GRANT ALL PRIVILEGES ON vuedemo . * TO 'vuedemo'@'localhost';

Be kell állítani a .env fájlban

Az az URL ahol elérhető lesz Laravel
    APP_URL=http://vue-api-demo.test

Adatbázis kapcsolatnál
    DB_DATABASE=vuedemo
    DB_USERNAME=vuedemo
    DB_PASSWORD=......

Telepítsük a breeze starter kitet (ekkor lesz egy web-es felület is ami lehet regisztrálni stb.)
https://laravel.com/docs/9.x/starter-kits#laravel-breeze-installation
`composer require laravel/breeze --dev`

Adjuk ki a `php artisan migrate` parancsot az alap táblák létrehozásához.

Telepítsük a breeze-t (ez eltart egy darabig)

    php artisan breeze:install
    npm install
    npm run dev

telepítsük fel a sanctum csomagot az API-s tokenes authentikációhoz
https://laravel.com/docs/9.x/sanctum

`composer require laravel/sanctum`
`php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"`
`php artisan migrate`


 php artisan migrate:fresh --seed

Így tudumk  felvenni usert DatabaseSeeder.php-be
    $user = User::create(
            [
                'name' => 'Admin',
                'email' => 'admin@admin.com',
                'password' => Hash::make('Pw-2022'),
                'email_verified_at'=>date('Y-m-d H:i:s')
        ]);


Készítsük el Task kezeléshez szükséges fájlokat:

php artisan make:model Task -a

    Model created successfully.
    Factory created successfully.
    Created Migration: 2022_02_10_082656_create_tasks_table
    Seeder created successfully.
    Request created successfully.
    Request created successfully.
    Controller created successfully.
    Policy created successfully.


Töltsük ki a Migration fájlt
  2022_02_10_082656_create_tasks_table

  public function up()
    {
        Schema::create('tasks', function (Blueprint $table) {
            $table->id();
            $table->foreignId('user_id');
            $table->string('task',50)->index();
            $table->text('comment')->nullable();
            $table->dateTime('due')->nullable()->index();
            $table->dateTime('completed')->nullable()->index();
            $table->softDeletes();
            $table->timestamps();
        });
    }

